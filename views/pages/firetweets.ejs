<!DOCTYPE html>
<html>

<head>
    <title>Les particules de la creation</title>
    <link rel="stylesheet" href="styleFiretweets.css">
</head>

<body>
    <div id="dir"> Click Anywhere For More </div>


    <script src="three.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="http://code.jquery.com/jquery-1.11.1.min.js"></script>
    <script type="text/javascript">
        //////////////settings/////////
        var movementSpeed = 80;
        var totalObjects = 1000;
        var objectSize = 10;
        var sizeRandomness = 4000;
        var colors = [0xFF0FFF, 0xCCFF00, 0xFF000F, 0x996600, 0xFFFFFF];
        /////////////////////////////////
        var dirs = [];
        var parts = [];
        var container = document.createElement('div');
        document.body.appendChild(container);

        var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 10000)
        camera.position.z = 1000;

        var scene = new THREE.Scene();

        function ExplodeAnimation(x, y) {
            var geometry = new THREE.Geometry();

            for (i = 0; i < totalObjects; i++) {
                var vertex = new THREE.Vector3();
                vertex.x = x;
                vertex.y = y;
                vertex.z = 0;

                geometry.vertices.push(vertex);
                dirs.push({ x: (Math.random() * movementSpeed) - (movementSpeed / 2), y: (Math.random() * movementSpeed) - (movementSpeed / 2), z: (Math.random() * movementSpeed) - (movementSpeed / 2) });
            }
            var material = new THREE.PointsMaterial({ size: objectSize, color: colors[Math.round(Math.random() * colors.length)] });
            var particles = new THREE.Points(geometry, material);

            this.object = particles;
            this.status = true;

            this.xDir = (Math.random() * movementSpeed) - (movementSpeed / 2);
            this.yDir = (Math.random() * movementSpeed) - (movementSpeed / 2);
            this.zDir = (Math.random() * movementSpeed) - (movementSpeed / 2);

            scene.add(this.object);


            //////

            var loader = new THREE.FontLoader();

            loader.load('helvetiker_bold.typeface.json', function (font) {

                var textGeo = new THREE.TextGeometry("My Text", {

                    font: font,

                    size: 200,
                    height: 50,
                    curveSegments: 12,

                    bevelThickness: 2,
                    bevelSize: 5,
                    bevelEnabled: true

                });

                var textMaterial = new THREE.MeshPhongMaterial({ color: 0xff0000 });

                var mesh = new THREE.Mesh(textGeo, textMaterial);
                mesh.position.set(x, y, 0);

                scene.add(mesh);

            });

            /////

            this.update = function () {
                if (this.status == true) {
                    var pCount = totalObjects;
                    while (pCount--) {
                        var particle = this.object.geometry.vertices[pCount]
                        particle.y += dirs[pCount].y;
                        particle.x += dirs[pCount].x;
                        particle.z += dirs[pCount].z;
                    }
                    this.object.geometry.verticesNeedUpdate = true;
                }
            }

        }

        var renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        container.appendChild(renderer.domElement);

        renderer.render(scene, camera);
        parts.push(new ExplodeAnimation(0, 0));
        render();

        function render() {
            requestAnimationFrame(render);

            var pCount = parts.length;
            while (pCount--) {
                parts[pCount].update();
            }

            renderer.render(scene, camera);

        }

        window.addEventListener('mousedown', onclick, false);
        window.addEventListener('resize', onWindowResize, false);

        function onclick() {
            event.preventDefault();
            parts.push(new ExplodeAnimation((Math.random() * sizeRandomness) - (sizeRandomness / 2), (Math.random() * sizeRandomness) - (sizeRandomness / 2)));
        }

        function onWindowResize() {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();

            renderer.setSize(window.innerWidth, window.innerHeight);

        }

        //////

        var socket = io.connect('/'),
            tweets = document.getElementById('tweets');
        //var queue = [];

        socket.on('tweet', function (data) {

            /*  if (queue.length < 5) {
                  queue.push(data);
                  tweets.innerHTML = tweets.innerHTML + '<br>' + data.user + ' :  ' + data.location + ' : ' + data.tweet;*/
            onclick();
            /*} else {
                queue.shift();
                tweets.innerHTML = tweets.innerHTML.substring(tweets.innerHTML.indexOf('<br>') + 4);
            }*/
            //console.log(data)

        });
    </script>
</body>

</html>